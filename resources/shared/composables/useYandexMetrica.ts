import { ref, onUnmounted, readonly } from 'vue'

/**
 * Composable –¥–ª—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –Ø–Ω–¥–µ–∫—Å.–ú–µ—Ç—Ä–∏–∫–∏
 * –ü–æ–¥–∫–ª—é—á–∞–µ—Ç –∏–ª–∏ –æ—Ç–∫–ª—é—á–∞–µ—Ç —Å—á–µ—Ç—á–∏–∫ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –Ω–∞–ª–∏—á–∏—è –∫–æ–¥–∞ –º–µ—Ç—Ä–∏–∫–∏
 */
export function useYandexMetrica() {
  const metricaCode = ref<string | null>(null)
  const isLoaded = ref(false)
  
  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ø–Ω–¥–µ–∫—Å.–ú–µ—Ç—Ä–∏–∫–∏ —Å –∑–∞–¥–∞–Ω–Ω—ã–º –∫–æ–¥–æ–º
   */
  const initMetrica = (code: string | null) => {
    if (!code || typeof window === 'undefined') {
      return
    }
    
    try {
      // –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Å–∫—Ä–∏–ø—Ç, –µ—Å–ª–∏ –µ—Å—Ç—å
      removeMetricaScript()
      
      // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç
      const script = document.createElement('script')
      script.type = 'text/javascript'
      script.async = true
      script.innerHTML = `
        (function(m,e,t,r,i,k,a){
          m[i]=m[i]||function(){(m[i].a=m[i].a||[]).push(arguments)};
          m[i].l=1*new Date();
          k=e.createElement(t),a=e.getElementsByTagName(t)[0],
          k.async=1,k.src=r,a.parentNode.insertBefore(k,a)
        })(window, document, "script", "https://mc.yandex.ru/metrika/watch.js", "ym");
        
        ym(${code}, "init", {
          clickmap:true,
          trackLinks:true,
          accurateTrackBounce:true,
          webvisor:true
        });
      `
      
      // –î–æ–±–∞–≤–ª—è–µ–º script –≤ head
      document.head.appendChild(script)
      
      // –°–æ–∑–¥–∞–µ–º noscript –¥–ª—è —Å–ª—É—á–∞–µ–≤ –±–µ–∑ JavaScript
      const noscript = document.createElement('noscript')
      noscript.innerHTML = `
        <div>
          <img src="https://mc.yandex.ru/watch/${code}" style="position:absolute; left:-9999px;" alt="" />
        </div>
      `
      document.head.appendChild(noscript)
      
      metricaCode.value = code
      isLoaded.value = true
      
      console.log(`‚úÖ –Ø–Ω–¥–µ–∫—Å.–ú–µ—Ç—Ä–∏–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ —Å –∫–æ–¥–æ–º: ${code}`)
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –Ø–Ω–¥–µ–∫—Å.–ú–µ—Ç—Ä–∏–∫–∏:', error)
      isLoaded.value = false
    }
  }
  
  /**
   * –£–¥–∞–ª–µ–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –Ø–Ω–¥–µ–∫—Å.–ú–µ—Ç—Ä–∏–∫–∏
   */
  const removeMetricaScript = () => {
    if (typeof window === 'undefined') {
      return
    }
    
    // –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å–∫—Ä–∏–ø—Ç—ã –º–µ—Ç—Ä–∏–∫–∏
    const existingScripts = document.querySelectorAll('script[src*="mc.yandex.ru"]')
    existingScripts.forEach(script => script.remove())
    
    // –£–¥–∞–ª—è–µ–º inline —Å–∫—Ä–∏–ø—Ç—ã —Å –º–µ—Ç—Ä–∏–∫–æ–π
    const inlineScripts = document.querySelectorAll('script')
    inlineScripts.forEach(script => {
      if (script.innerHTML.includes('mc.yandex.ru/metrika')) {
        script.remove()
      }
    })
    
    // –£–¥–∞–ª—è–µ–º noscript —ç–ª–µ–º–µ–Ω—Ç—ã
    const noscriptElements = document.querySelectorAll('noscript')
    noscriptElements.forEach(noscript => {
      if (noscript.innerHTML.includes('mc.yandex.ru/watch')) {
        noscript.remove()
      }
    })
    
    // –û—á–∏—â–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç ym, –µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if (window.ym) {
      try {
        delete window.ym
      } catch (error) {
        // –í –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –±—Ä–∞—É–∑–µ—Ä–∞—Ö delete –º–æ–∂–µ—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞—Ç—å
        window.ym = undefined
      }
    }
    
    isLoaded.value = false
    console.log('üóëÔ∏è –Ø–Ω–¥–µ–∫—Å.–ú–µ—Ç—Ä–∏–∫–∞ —É–¥–∞–ª–µ–Ω–∞')
  }
  
  /**
   * –û—Ç–ø—Ä–∞–≤–∫–∞ —Ü–µ–ª–∏ –≤ –Ø–Ω–¥–µ–∫—Å.–ú–µ—Ç—Ä–∏–∫—É
   */
  const reachGoal = (goal: string, params?: Record<string, any>) => {
    if (!isLoaded.value || !metricaCode.value || typeof window === 'undefined') {
      console.warn('‚ö†Ô∏è –Ø–Ω–¥–µ–∫—Å.–ú–µ—Ç—Ä–∏–∫–∞ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞, —Ü–µ–ª—å –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞:', goal)
      return
    }
    
    try {
      if (window.ym) {
        window.ym(metricaCode.value, 'reachGoal', goal, params)
        console.log(`üéØ –¶–µ–ª—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ –Ø–Ω–¥–µ–∫—Å.–ú–µ—Ç—Ä–∏–∫—É: ${goal}`, params)
      }
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ü–µ–ª–∏ –≤ –Ø–Ω–¥–µ–∫—Å.–ú–µ—Ç—Ä–∏–∫—É:', error)
    }
  }
  
  /**
   * –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–±—ã—Ç–∏—è –≤ –Ø–Ω–¥–µ–∫—Å.–ú–µ—Ç—Ä–∏–∫—É
   */
  const hit = (url?: string, options?: Record<string, any>) => {
    if (!isLoaded.value || !metricaCode.value || typeof window === 'undefined') {
      return
    }
    
    try {
      if (window.ym) {
        window.ym(metricaCode.value, 'hit', url, options)
      }
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ hit –≤ –Ø–Ω–¥–µ–∫—Å.–ú–µ—Ç—Ä–∏–∫—É:', error)
    }
  }
  
  // –û—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  onUnmounted(() => {
    removeMetricaScript()
  })
  
  return {
    metricaCode: readonly(metricaCode),
    isLoaded: readonly(isLoaded),
    initMetrica,
    removeMetricaScript,
    reachGoal,
    hit
  }
}

// –¢–∏–ø–∏–∑–∞—Ü–∏—è –¥–ª—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ ym
declare global {
  interface Window {
    ym?: (counterId: string | number, method: string, ...args: any[]) => void
  }
} 